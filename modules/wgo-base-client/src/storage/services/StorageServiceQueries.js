import { __makeTemplateObject } from "tslib";
import gql from "graphql-tag";
import { STORAGE_PATH_DELETE_STORAGE, STORAGE_PATH_GET_STORAGE_BY_PAGE, STORAGE_PATH_GET_STORAGE_BY_TYPE, STORAGE_PATH_POST_STORAGE, STORAGE_PATH_PUT_STORAGE, } from "@wisegar-org/wgo-base-models/build/storage/server";
export var Q_STORAGE_ALLITEMS = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  query ", "($data: StorageAllInput!) {\n    ", "(data: $data) {\n      id\n      type\n      content\n      image {\n        id\n        mimetype\n        isPublic\n        displayName\n        fileName\n        url\n      }\n      imageList {\n        id\n        mimetype\n        isPublic\n        displayName\n        fileName\n        url\n      }\n    }\n  }\n"], ["\n  query ", "($data: StorageAllInput!) {\n    ", "(data: $data) {\n      id\n      type\n      content\n      image {\n        id\n        mimetype\n        isPublic\n        displayName\n        fileName\n        url\n      }\n      imageList {\n        id\n        mimetype\n        isPublic\n        displayName\n        fileName\n        url\n      }\n    }\n  }\n"])), STORAGE_PATH_GET_STORAGE_BY_TYPE, STORAGE_PATH_GET_STORAGE_BY_TYPE);
export var Q_STORAGE_ITEMSBYPAGE = gql(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  query ", "($data: StoragePageInput!) {\n    ", "(data: $data) {\n      storageItemsCount\n      storageItems {\n        id\n        type\n        content\n        image {\n          id\n          mimetype\n          isPublic\n          displayName\n          fileName\n          url\n        }\n        imageList {\n          id\n          mimetype\n          isPublic\n          displayName\n          fileName\n          url\n        }\n      }\n    }\n  }\n"], ["\n  query ", "($data: StoragePageInput!) {\n    ", "(data: $data) {\n      storageItemsCount\n      storageItems {\n        id\n        type\n        content\n        image {\n          id\n          mimetype\n          isPublic\n          displayName\n          fileName\n          url\n        }\n        imageList {\n          id\n          mimetype\n          isPublic\n          displayName\n          fileName\n          url\n        }\n      }\n    }\n  }\n"])), STORAGE_PATH_GET_STORAGE_BY_PAGE, STORAGE_PATH_GET_STORAGE_BY_PAGE);
export var M_STORAGE_CREATEITEM = gql(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  mutation ", "($data: StorageInput!) {\n    ", "(data: $data)\n  }\n"], ["\n  mutation ", "($data: StorageInput!) {\n    ", "(data: $data)\n  }\n"])), STORAGE_PATH_POST_STORAGE, STORAGE_PATH_POST_STORAGE);
export var M_STORAGE_MODIFYITEM = gql(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  mutation ", "($data: StorageInput!) {\n    ", "(data: $data)\n  }\n"], ["\n  mutation ", "($data: StorageInput!) {\n    ", "(data: $data)\n  }\n"])), STORAGE_PATH_PUT_STORAGE, STORAGE_PATH_PUT_STORAGE);
export var M_STORAGE_DELETEITEM = gql(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  mutation ", "($id: Float!) {\n    ", "(id: $id)\n  }\n"], ["\n  mutation ", "($id: Float!) {\n    ", "(id: $id)\n  }\n"])), STORAGE_PATH_DELETE_STORAGE, STORAGE_PATH_DELETE_STORAGE);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
//# sourceMappingURL=StorageServiceQueries.js.map