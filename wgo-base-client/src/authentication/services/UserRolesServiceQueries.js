import { __makeTemplateObject } from "tslib";
import gql from "graphql-tag";
import { AUTH_PATH_DELETE_USER, AUTH_PATH_GET_ALL_ROLES, AUTH_PATH_GET_ALL_USERS, AUTH_PATH_GET_USER, } from "@wisegar-org/wgo-base-models/build/authentication/server";
export var M_USER_ROLES_DELETE_USER = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  mutation ", "($data: IdInput!) {\n    ", "(data: $data)\n  }\n"], ["\n  mutation ", "($data: IdInput!) {\n    ", "(data: $data)\n  }\n"])), AUTH_PATH_DELETE_USER, AUTH_PATH_DELETE_USER);
export var Q_AUTH_GET_USER = gql(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  query ", "($data: IdInput!) {\n    ", "(data: $data) {\n      id\n      name\n      lastName\n      userName\n      email\n      roles\n      code\n      certificate\n      isEmailConfirmed\n    }\n  }\n"], ["\n  query ", "($data: IdInput!) {\n    ", "(data: $data) {\n      id\n      name\n      lastName\n      userName\n      email\n      roles\n      code\n      certificate\n      isEmailConfirmed\n    }\n  }\n"])), AUTH_PATH_GET_USER, AUTH_PATH_GET_USER);
export var Q_AUTH_GET_ALL_USER = gql(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  query ", " {\n    ", " {\n      id\n      name\n      lastName\n      userName\n      email\n      roles\n      code\n      certificate\n      isEmailConfirmed\n    }\n  }\n"], ["\n  query ", " {\n    ", " {\n      id\n      name\n      lastName\n      userName\n      email\n      roles\n      code\n      certificate\n      isEmailConfirmed\n    }\n  }\n"])), AUTH_PATH_GET_ALL_USERS, AUTH_PATH_GET_ALL_USERS);
export var Q_AUTH_GET_ALL_ROLES = gql(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  query ", " {\n    ", "\n  }\n"], ["\n  query ", " {\n    ", "\n  }\n"])), AUTH_PATH_GET_ALL_ROLES, AUTH_PATH_GET_ALL_ROLES);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=UserRolesServiceQueries.js.map